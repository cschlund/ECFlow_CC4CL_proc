#!/usr/bin/env python2.7

import os, sys

# -------------------------------------------------------
# -- modify this ----------------------------------------
# -------------------------------------------------------

# user settings
remote_host_name  = "cca"
remote_user_name  = "sf7"

# base path, user specific
basepath = "ms/de/sf7/cschlund"

# subfolder, where your repository is located
# e.g. /perm/ms/de/sf7/cschlund/test/ECFlow_CC4CL_proc
type = "test"

# suite name
mysuite = type+"_cc4cl_proc" 

# serial and parallel threads
serial_threads_number = 1
parallel_threads_number = 2


# -------------------------------------------------------
# -- modify below if you know what you are doing!
# -------------------------------------------------------

# -- pycmsaf software
pycmsaf = "/perm/ms/de/sf7/cschlund/pycmsaf"
gacdb_file = os.path.join( pycmsaf, "AVHRR_GAC_archive.sqlite3" )

# -- ecgate and cca
repository   = "ECFlow_CC4CL_proc"
perm         = os.path.join( "/perm", basepath )
scratch      = os.path.join( "/scratch", basepath )
perm_base    = os.path.join( perm, type, repository )
scratch_base = os.path.join( scratch, type, repository )


# -- cca:
esa_routine   = os.path.join( perm_base, "esa_routines" )
esa_inputdir  = os.path.join( scratch_base, "input" )
esa_outputdir = os.path.join( scratch_base, "output" )
esa_level3dir = os.path.join( scratch_base, "output/level3" )
esa_logdir    = os.path.join( scratch_base, "logs/processing" )

# new programs
make_cfg_files    = os.path.join( esa_routine, "create_config_files.py" )
count_orbit_files = os.path.join( esa_routine, "count_orbit_files.sh" )
cleanup_scratch   = os.path.join( esa_routine, "cleanup_scratch.py" )
archive_l3_data   = os.path.join( esa_routine, "proc_4_archive_l3_data.py" )

# config files
cfg_paths_file = os.path.join( esa_routine, "config_paths.file" )
cfg_attri_file = os.path.join( esa_routine, "config_attributes.file" )
cfg_pro1_avhrr = os.path.join( esa_routine, "config_proc_1_getdata_avhrr.file" )
cfg_pro1_modis = os.path.join( esa_routine, "config_proc_1_getdata_modis.file" )
cfg_pro1_mars  = os.path.join( esa_routine, "config_proc_1_getdata_mars.file" )
cfg_pro1_aux   = os.path.join( esa_routine, "config_proc_1_getdata_aux.file" )
cfg_pro2_orac  = os.path.join( esa_routine, "config_proc_2_process.file" )
cfg_lev3u_file = os.path.join( esa_routine, "config_proc_3_make_l3u.file" )
cfg_lev3c_file = os.path.join( esa_routine, "config_proc_3_make_l3c.file" )

# ksh scripts
get_avhrr_ksh  = os.path.join( esa_routine, "proc_1_getdata_avhrr.ksh" )
get_modis_ksh  = os.path.join( esa_routine, "proc_1_getdata_modis.ksh" )
get_mars_ksh   = os.path.join( esa_routine, "proc_1_getdata_mars.ksh" )
get_aux_ksh    = os.path.join( esa_routine, "proc_1_getdata_aux.ksh" )
proc2_orac_ksh = os.path.join( esa_routine, "proc_2_process.ksh" )
single_day_ksh = os.path.join( esa_routine, "process_single_day.ksh")
run_l2tol3_ksh = os.path.join( esa_routine, "proc_3_l2tol3_script.ksh" )
# diese sollte man besser ersetzen durch ein neues python tool!
# siehe avhrrgac proc
rename_l3_ksh  = os.path.join( esa_routine, "rename_local_l3.ksh" )
archive_l3_ksh = os.path.join( esa_routine, "archive_L3.ksh" )

# exe scripts
wrapper_exe    = os.path.join( esa_routine, "mpi_wrapper.x")


# -- paths to be exported: $PATH, $PYTHONPATH, $LD_LIBRARY_PATH
pycmsaf_bin  = os.path.join( pycmsaf, "bin" )
python_path  = "/usr/local/apps/python/current/bin/python"
ld_lib_path  = "/perm/ms/de/sf7/esa_cci_c_proc/software/"\
               "epr/epr_api-2.2/build/release:"\
               "/perm/us/usc/hdfeos/2.19-d/CRAY/82/lib:$LD_LIBRARY_PATH"

# -- server settings @ ecgate
ecflow_submit     = os.path.join( pycmsaf_bin, "ecf_submit.py" )
ecf_files_dir     = os.path.join( perm_base, "ecflow_suite/tasks" )
ecf_include_dir   = os.path.join( perm_base, "ecflow_suite/include" )
ecf_home_dir      = os.path.join( scratch_base, "generated" )
ecf_out_dir       = os.path.join( scratch_base, "log" )
remote_log_dir    = os.path.join( scratch_base, "log" )

# -- command for submitting serial and mpmd jobs
serial_job_cmd = "%PYTHON% %ECF_SUBMIT% "\
            "%REMOTE_USER% %REMOTE_HOST% "\
            "%ECF_JOB% %REMOTE_LOGDIR%%ECF_NAME%.%ECF_TRYNO% > "\
            "%ECF_OUT%%ECF_NAME%.%ECF_TRYNO% 2>&1"

