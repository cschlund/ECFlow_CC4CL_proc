%include <pbs_serial_cleanup.h>
%include <head.h>
%include <export.h>

echo "I am task %TASK% in family %FAMILY% responsible for computing number of CPUs used for the retrieval"

if [ %DUMMYRUN% == 1 ]; then 

    python -c "import time; import numpy; time.sleep(numpy.random.randint(1, 20))"

else

    date_sat_base="%START_YEAR%_%START_MONTH%_%SATELLITE%"

    if [ %SENSOR% == "AVHRR" ]; then

        cfg_typ="1_getdata_avhrr_"
        cfg_bas="%CFG_PREFIX%${cfg_typ}${date_sat_base}%CFG_SUFFIX%"
        cfg_fil="%ESA_CONFIGDIR%/${cfg_bas}"

        monthly_orbits="%ESA_LIST_L2FILES%/orbit_list_${date_sat_base}.txt"
        val=`Rscript %COUNT_AVHRR_ORBITS% --vanilla %ESA_LIST_L2FILES% $monthly_orbits %GACDB_CLIENT% %SQL_AVHRR_GAC% %START_YEAR% %START_MONTH% %SATELLITE%`
        #val=`%COUNT_ORBIT_FILES% %CFG_PATHS_FILE% ${cfg_fil} %PROCDAY%`

    else

        cfg_typ="1_getdata_modis_"
        cfg_bas="%CFG_PREFIX%${cfg_typ}${date_sat_base}%CFG_SUFFIX%"
        cfg_fil="%ESA_CONFIGDIR%/${cfg_bas}"

        val=`%COUNT_ORBIT_FILES% %CFG_PATHS_FILE% ${cfg_fil} %PROCDAY%`

        # for MODIS we must set a maximum!
        maxval=2399
        if [ "$val" -gt "$maxval" ]; then val=$maxval; fi

    fi
    
    #val=1
    new=$((val + 1))

    ecflow_client --alter add variable 'EC_TOTAL_SLAVES' "$new" '/%SUITE%/%FAMILY%'

fi

%include <tail.h>
