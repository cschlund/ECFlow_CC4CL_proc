%include <pbs_serial_cleanup.h>
%include <head.h>
%include <export.h>

echo "I am task %TASK% in family %FAMILY% responsible for computing number of CPUs used for the retrieval"

if [ %DUMMYRUN% == 1 ]; then 

    python -c "import time; import numpy; time.sleep(numpy.random.randint(1, 20))"

else

    date_sat_base="%START_YEAR%_%START_MONTH%_%SATELLITE%"

    if [ %SENSOR% == "AVHRR" ]; then

        cfg_typ="1_getdata_avhrr_"
        cfg_bas="%CFG_PREFIX%${cfg_typ}${date_sat_base}%CFG_SUFFIX%"
        cfg_fil="%ESA_CONFIGDIR%/${cfg_bas}"

	    #dbfile="/perm/ms/de/sf7/esa_cci_c_proc/CCFLOW/ECFlow_CC4CL_proc/sql/AVHRR_GAC_archive_filled_POD_KLM_overlap.sqlite3"
	    #gacdb_client="/perm/ms/de/sf7/esa_cci_c_proc/CCFLOW/ECFlow_CC4CL_proc/sql/gacdb_client.py"
	    #date=%START_YEAR%%START_MONTH%%PROCDAY%
	    #python $gacdb_client --dbfile=$dbfile get_scanlines --date=$date --sat=%SATELLITE% --mode=l1c > orbit_list.txt
	    #val=`Rscript format_orbit_list.R --vanilla orbit_list.txt`

        val=`%COUNT_ORBIT_FILES% %CFG_PATHS_FILE% ${cfg_fil} %PROCDAY%`

    else

        cfg_typ="1_getdata_modis_"
        cfg_bas="%CFG_PREFIX%${cfg_typ}${date_sat_base}%CFG_SUFFIX%"
        cfg_fil="%ESA_CONFIGDIR%/${cfg_bas}"

        val=`%COUNT_ORBIT_FILES% %CFG_PATHS_FILE% ${cfg_fil} %PROCDAY%`

        # for MODIS we must set a maximum!
        maxval=2399
        if [ "$val" -gt "$maxval" ]; then val=$maxval; fi

    fi
    
    #val=1
    new=$((val + 1))

    ecflow_client --alter add variable 'EC_TOTAL_SLAVES' "$new" '/%SUITE%/%FAMILY%'

fi

%include <tail.h>
