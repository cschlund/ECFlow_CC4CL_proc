%include <pbs_serial_l2tol3.h>
%include <head.h>
%include <export.h>

# -- no core file
export ATP_ENABLED=0
# -- core file
#export ATP_ENABLED=1
#ulimit -c unlimited
# -- stacksize (keep it always that way)
ulimit -s unlimited

set -x

echo "I am task %TASK% in family %FAMILY% responsible for L3S processing, i. e. sensor family monthly averages (AVHRR or MODIS)"

if [ %DUMMYRUN% == 1 ]; then

    python -c "import time; import numpy; time.sleep(numpy.random.randint(1, 20))"

else

    # -- working directory: write core file here
    cd %ESA_ECF_LOG_DIR%

    # -- settings for L3S based on L2B_SUM
    date=%START_YEAR%_%START_MONTH%
    prodtype="l3b"
    cfg_typ="3_make_l3s_"
    cfg_bas="%CFG_PREFIX%${cfg_typ}%SENSOR_FAM%"_"${date}%CFG_SUFFIX%"
    cfg_fil="%ESA_CONFIGDIR%/${cfg_bas}"

    # -- create l2b sum output file list for L3C production
    sstr="done L2->L3 finished, results written to:"
    nSpaces=`echo %L2B_SUM_LOGDIRS% | tr -cd " " | wc -c`
    nL2B_SUM_FILES=`expr $nSpaces + 1`
    fbasen="L2B_SUM_ncfile_list_${prodtype}_%SENSOR_FAM%_${date}.txt"
    ofilelist="%ESA_LIST_L2FILES%/${fbasen}"
    # -- create emtpy file, or erase content if file already exists
    > $ofilelist
    
    for i in `seq 1 $nL2B_SUM_FILES`; do
	SUBSTRING=$(echo %L2B_SUM_LOGDIRS%| cut -d' ' -f $i)
	echo $SUBSTRING
	length=${#SUBSTRING}
	search="NOAA"
	index=`awk -v a="$SUBSTRING" -v b="$search" 'BEGIN{print index(a,b)}'`
	index=`expr $index - 1`
	satellite=${SUBSTRING:$index:$length}
	echo $satellite
	inFile="%ESA_LIST_L2FILES%/L2B_SUM_ncfile_list_l3a_%SENSOR_FAM%_${satellite}_${date}.txt"
	cat $inFile >> $ofilelist
    done

    # -- create job id number
    primary_id=`echo ${PBS_JOBID} | cut -f1 -d"."`
    id=`date +%%s`
    sleep 3
    jid=ID${primary_id}_US${id}


    # -- create L3C config file
    python %MAKE_CFG_FILE% \
           --cfile ${cfg_fil} \
           --start_year %START_YEAR% --end_year %END_YEAR% \
           --start_month %START_MONTH% --end_month %END_MONTH% \
           l2tol3 --instrument %SENSOR_FAM% \
           --inpdir %ESA_LEVEL3DIR% --prodtype ${prodtype} \
           --l2bsum_filelist ${ofilelist} --proc_toa %PROC_TOA%

    # -- execute ksh script
    %RUN_L2TOL3_KSH% $jid \
                     %CFG_ATTRI_FILE% \
                     %CFG_PATHS_FILE% \
                     ${cfg_fil}

fi

%include <tail.h>
