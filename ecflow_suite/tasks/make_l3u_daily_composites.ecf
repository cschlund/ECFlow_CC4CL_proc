%include <pbs_parallel_l2tol3.h>
%include <head.h>
%include <export.h>

# -- no core file
export ATP_ENABLED=0
# -- core file
#export ATP_ENABLED=1
#ulimit -c unlimited
# -- stacksize (keep it always that way)
ulimit -s unlimited

echo "I am task %TASK% in family %FAMILY% responsible for L3U processing, i. e. daily composites (L2b)"

if [ %DUMMYRUN% == 1 ]; then 

    python -c "import time; import numpy; time.sleep(numpy.random.randint(1, 20))"

else

    # -- settings
    prodtype=l2b
    sat_date_base="%SATELLITE%_%START_YEAR%_%START_MONTH%"
    cfg_base="3_make_l3u_${sat_date_base}_"

    # -- log directory for daily jobs
    log_dir="%ESA_ECF_LOG_DIR%/%SUITE%/%FAMILY%"



    # -- log file of retrieval ecflow script
    log_file_retrieval="${log_dir}/retrieval.1"

    # -- working directory: write core file here
    cd %ESA_ECF_LOG_DIR%
    
    # -- create job id number
    primary_id=`echo ${PBS_JOBID} | cut -f1 -d"."`
    id=`date +%%s`
    sleep 3
    jid=ID${primary_id}_US${id}
    
    # -- create l2 output file list
    filelist_basename="L2_ncfile_list_${prodtype}_%SENSOR%_${sat_date_base}.txt"
    filelist_level2_output="%ESA_LIST_L2FILES%/${filelist_basename}"

    # -- write L2B (L3U) config files
    echo "Write MPMD "%NDAYS_OF_MONTH%" daily config files for "${prodtype}": "\
         %START_YEAR%/%START_MONTH%" and "%SENSOR%/%SATELLITE%

    l3_global_config_file="%ESA_CONFIGDIR%/${prodtype}_%SENSOR%_${sat_date_base}.txt"

    python %MAKE_CFG_FILE% -cf ${l3_global_config_file} -sy %START_YEAR% -ey %END_YEAR% -sm %START_MONTH% -em %END_MONTH% l2tol3 -ins %SENSOR% -inp n/a -typ ${prodtype}

    Rscript %WRITE_MPMD_CFGFILES% --vanilla \
            %START_YEAR% %START_MONTH% ${prodtype} \
            %SENSOR% %SATELLITE% ${jid} %NDAYS_OF_MONTH% \
            %ESA_CONFIGDIR% %CFG_PREFIX% %CFG_SUFFIX% ${cfg_base} \
            %ESA_OUTPUTDIR% \
            ${filelist_level2_output} \
            ${l3_global_config_file}

    # -- write MPMD task list
    echo "Write MPMD Taskfile for "${prodtype}" in SUITE/FAMILY: "%SUITE%/%FAMILY%

    taskfile="%ESA_CONFIGDIR%/MPMD_tasks_${cfg_base}${jid}.txt"

    Rscript %WRITE_MPMD_TASKFILE% --vanilla \
            ${jid} %NDAYS_OF_MONTH% ${log_dir} \
            %ESA_CONFIGDIR% %CFG_PREFIX% %CFG_SUFFIX% ${cfg_base} \
            %RUN_L2TOL3_KSH% \
            %CFG_ATTRI_FILE% \
            %CFG_PATHS_FILE% \
            ${taskfile} \
            ${l3_global_config_file}

    # To avoid creation of cores in case of abort, which takes ages...
    module unload atp

    # For OpenMP tasks
    export OMP_NUM_THREADS=$EC_threads_per_task

    # -- call aprun using the MPMD submitter
    echo "Now start MPMD Job using "%MPMD_SUBMITTER%" and "${taskfile}

    aprun -n $EC_total_tasks -N $EC_tasks_per_node %MPMD_SUBMITTER% ${taskfile}

fi

%include <tail.h>
